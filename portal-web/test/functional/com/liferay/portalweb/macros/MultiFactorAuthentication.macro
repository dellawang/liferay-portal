definition {

	macro configureOTP {
		if ("${enableOTP}" == "true") {
			FormFields.enableCheckbox(fieldName = "enabled");
		}
		else if ("${enableOTP}" == "false") {
			FormFields.disableCheckbox(fieldName = "enabled");
		}

		if (IsElementPresent(locator1 = "Button#UPDATE")) {
			PortletEntry.update();
		}
		else if (IsElementPresent(locator1 = "Button#SAVE")) {
			PortletEntry.save();
		}
	}

	macro configureOTPEmailSender {
		Type(
			locator1 = "MultiFactorAuthentication#EMAIL_OTP_SENDER_ADDRESS_FIELD",
			value1 = "${emailAddress}");

		Type(
			locator1 = "MultiFactorAuthentication#EMAIL_OTP_SENDER_NAME_FIELD",
			value1 = "${emailSenderName}");

		if (IsElementPresent(locator1 = "Button#UPDATE")) {
			PortletEntry.update();
		}
		else if (IsElementPresent(locator1 = "Button#SAVE")) {
			PortletEntry.save();
		}
	}

	macro emailOTPConfiguration {
		var failedAttemptsAllowed = "${failedAttemptsAllowed}";
		var retryTimeout = "${retryTimeout}";

		if (isSet(failedAttemptsAllowed)) {
			Type(
				key_fieldName = "failedAttemptsAllowed",
				locator1 = "MultiFactorAuthentication#EMAIL_OTP_CONFIG_FIELD",
				value1 = "${failedAttemptsAllowed}");
		}

		if (isSet(retryTimeout)) {
			Type(
				key_fieldName = "retryTimeout",
				locator1 = "MultiFactorAuthentication#EMAIL_OTP_CONFIG_FIELD",
				value1 = "${retryTimeout}");
		}

		if (IsElementPresent(locator1 = "Button#UPDATE")) {
			PortletEntry.update();
		}
		else if (IsElementPresent(locator1 = "Button#SAVE")) {
			PortletEntry.save();
		}
	}

	macro sendOTPEmailPG {
		AssertTextEquals(
			locator1 = "MultiFactorAuthentication#EMAIL_OTP_VERIFY_INFO_MESSAGE",
			value1 = "Your one-time password will be sent to your email address.");

		AssertClick(
			locator1 = "MultiFactorAuthentication#EMAIL_OTP_VERIFY_SEND_EMAIL_BUTTON",
			value1 = "Send");

		AssertTextEquals(
			locator1 = "MultiFactorAuthentication#EMAIL_OTP_VERIFY_SUCCESS_MESSAGE",
			value1 = "Your one-time password has been sent by email.");
	}

	macro verifyOTP {
		var bodySpecificText = MockMock.getBodySpecificText(
			asset = "${portalURL}: Your One-Time Password",
			content = "Your one-time password is:",
			enableOTP = "true",
			recipient = "${recipient}",
			sender = "Joe Bloggs",
			specificText = "Your one-time password is: <pre>",
			subject = "${portalURL}: Your One-Time Password");

		if (isSet(specificURL)) {
			Navigator.openSpecificURL(url = "${specificURL}");
		}
		else {
			Navigator.openURL();
		}

		SignIn._signIn(
			userEmailAddress = "${userEmailAddress}",
			userPassword = "${userPassword}");

		if ("${validOTP}" == "true") {
			Type(
				locator1 = "MultiFactorAuthentication#EMAIL_OTP_VERIFY_FIELD",
				value1 = "${bodySpecificText}");

			Button.click(button = "Submit");

			if (IsElementPresent(locator1 = "MultiFactorAuthentication#EMAIL_OTP_VERIFY_FAILED_MESSAGE")) {
				AssertElementNotPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");
			}
			else {
				AssertElementNotPresent(locator1 = "MultiFactorAuthentication#EMAIL_OTP_VERIFY_FIELD");
				AssertElementPresent(locator1 = "UserBar#USER_AVATAR_IMAGE");
			}
		}
		else if ("${validOTP}" == "false") {
			var otp = "${otp}";

			Type(
				locator1 = "MultiFactorAuthentication#EMAIL_OTP_VERIFY_FIELD",
				value1 = "${otp}");

			Button.click(button = "Submit");

			AssertElementPresent(locator1 = "MultiFactorAuthentication#EMAIL_OTP_VERIFY_FAILED_MESSAGE");
		}
	}

	macro viewOTPEmailSenderCP {
		AssertTextEquals(
			locator1 = "MultiFactorAuthentication#EMAIL_OTP_SENDER_ADDRESS_FIELD",
			value1 = "${emailAddress}");

		AssertTextEquals(
			locator1 = "MultiFactorAuthentication#EMAIL_OTP_SENDER_NAME_FIELD",
			value1 = "${emailSenderName}");
	}

}